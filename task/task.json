{
    "id": "11bd67d8-bfe7-497b-967d-e800eb673119",
    "name": "Gitleaks",
    "friendlyName": "Gitleaks scan",
    "description": "Scan git repos (or files) for secrets using regex and entropy.",
    "helpMarkDown": "[More information](https://github.com/JoostVoskuil/azure-devops-gitleaks)",
    "category": "Utility",
    "visibility": [
        "Build"
    ],
    "runsOn": [
        "Agent"
    ],
    "author": "Joost Voskuil (joost@foxhole.nl)",
    "version": {
        "Major": 1,
        "Minor": 3,
        "Patch": 0
    },
    "inputs": [
        {
            "name": "scanfolder",
            "type": "string",
            "label": "Scan Folder",
            "defaultValue": "$(Build.SourcesDirectory)",
            "required": true,
            "helpMarkDown": "Specify the location to scan. Defaults to your sources directory."
        },
        {
            "name": "configtype",
            "type": "pickList",
            "label": "Configuration Type",
            "defaultValue": "default",
            "required": false,
            "options": {
                "default": "default",
                "predefined": "predefined",
                "custom": "custom"
            },
            "helpMarkDown": "Specify if you want to use the default, predefined config or a custom config."
        },
        {
            "name": "predefinedconfigfile",
            "type": "pickList",
            "label": "Predefined config file",
            "defaultValue": "UDMSecretChecks.toml",
            "required": true,
            "options": {
                "UDMSecretChecks.toml": "UDMSecretChecks.toml",
                "GitleaksUdmCombo.toml": "GitleaksUdmCombo.toml"
            },
            "helpMarkDown": "Select a predefined config file.",
            "visibleRule": "configtype=predefined"
        },
        {
            "name": "configfile",
            "type": "string",
            "label": "Config file",
            "defaultValue": "config/gitleaks.toml",
            "required": true,
            "helpMarkDown": "Specify a custom config file inside your repo.",
            "visibleRule": "configtype=custom"
        },
        {
            "name": "nogit",
            "type": "boolean",
            "label": "No Git",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Treat git repos as plain directories and scan those files."
        },
        {
            "name": "scanonlychanges",
            "type": "boolean",
            "label": "Scan only changes since last build",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "nogit=false"
        },
        {
            "name": "depth",
            "type": "int",
            "label": "Number of commits to scan",
            "required": false,
            "visibleRule": "nogit=false"
        },
        {
            "name": "verbose",
            "type": "boolean",
            "label": "Verbose output",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check this option if you want gitleaks to print verbose output."
        },
        {
            "name": "reportformat",
            "type": "pickList",
            "label": "Report format",
            "defaultValue": "json",
            "required": true,
            "options": {
                "json": "json",
                "sarif": "sarif",
                "csv": "csv"
            },
            "helpMarkDown": "Select a report format: json, sarif, csv (default: json)"
        },
        {
            "name": "uploadresults",
            "type": "boolean",
            "label": "Upload results",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Check this option if you want to upload the results as an artifact."
        },
        {
            "name": "redact",
            "type": "boolean",
            "label": "Redact",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check this option if you want to redact secrets from log messages and leaks."
        },
        {
            "name": "taskfail",
            "type": "boolean",
            "label": "Fail the task if secrets founded",
            "defaultValue": "true",
            "required": false
        },
        {
            "name": "arguments",
            "type": "string",
            "label": "Extra gitleaks arguments",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specify extra Gitleaks arguments."
        },
        {
            "name": "version",
            "type": "string",
            "label": "Gitleaks version",
            "defaultValue": "latest",
            "required": false,
            "helpMarkDown": "Specify the version of Gitleaks to use."
        }
    ],
    "execution": {
        "Node10": {
            "target": "index.js"
        }
    },
    "messages": {
        "ThanksToZacharyRice": "Thanks to Zachary Rice (https://github.com/zricethezav) for creating and maintaining gitleaks.",
        "ThanksToJesseHouwing": "Thanks to Jesse Houwing (https://github.com/jessehouwing) for providing a gitleaks config that has most of Microsoft's deprecated credscan rules ported to it.",
        "ResultError": "Secrets found or error encountered when running Gitleaks. See log and report for details.",
        "ResultSuccess": "Good job! No leaks.",
        "ScanFolder": "Scan Folder is set to %s",
        "ReportPath": "Report path is set to %s",
        "IncorrectConfig": "Incorrect configuration set.",
        "ConfigFile": "Config file parameter is set to %s",
        "AvailableInToolcache": "%s is already available in toolcache.",
        "CachedTool": "Cached tool is %s",
        "CannotParseVersion": "Cannot parse version %s",
        "DownloadUri": "%s download uri is %s",
        "CannotRetrieveVersion": "Cannot retrieve version from %s",
        "OsArchNotSupported": "OS '%s' and architecture '%s' is not supported by %s.",
        "NoToolcacheDownloading": "%s is not available in toolcache. Downloading %s from %s",
        "UploadResults": "Uploading report file to %s",
        "GettingUrl": "Getting %s to find latest version of %s",
        "ReleaseInfo": "Downloaded release info: %s",
        "CommitsFile": "CommitsFile is set to  %s",
        "DetectedChanges": "Detected %s Git changes for this build.",
        "GetEndpointUrlEmpty": "GetEndpointUrl %s is empty",
        "GetEndpointAuthorizationParameterEmpty": "GetEndpointAuthorizationParameter %s is empty",
        "VariableEmpty": "Variable %s is empty",
        "InputEmpty": "Input %s is empty",
        "AdoConnectionError": "Connection cannot be made to Azure DevOps."
    }
}