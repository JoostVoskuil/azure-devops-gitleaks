{
    "id": "11bd67d8-bfe7-497b-967d-e800eb673119",
    "name": "Gitleaks",
    "friendlyName": "Gitleaks scan",
    "description": "Scan git repos (or files) for secrets using regex and entropy.",
    "helpMarkDown": "[More information](https://github.com/JoostVoskuil/azure-devops-gitleaks)",
    "category": "Utility",
    "visibility": [
        "Build"
    ],
    "runsOn": [
        "Agent"
    ],
    "author": "Joost Voskuil (joost@foxhole.nl)",
    "version": {
        "Major": 2,
        "Minor": 0,
        "Patch": 2
    },
    "groups": [
        {
            "name": "scanconfiguration",
            "displayName": "Scan configuration",
            "isExpanded": true
        },
        {
            "name": "scanoptions",
            "displayName": "Scan options",
            "isExpanded": false
        },
        {
            "name": "reporting",
            "displayName": "Reporting",
            "isExpanded": false
        },
        {
            "name": "behaviour",
            "displayName": "Task Behaviour",
            "isExpanded": false
        },
        {
            "name": "gitleakstool",
            "displayName": "Gitleaks Tool location and version",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "scanfolder",
            "type": "string",
            "label": "Scan Folder",
            "defaultValue": "$(Build.SourcesDirectory)",
            "required": true,
            "helpMarkDown": "Specify the location to scan. Defaults to your sources directory."
        },
        {
            "name": "configtype",
            "type": "pickList",
            "label": "Configuration Type",
            "defaultValue": "default",
            "required": false,
            "options": {
                "default": "Default",
                "predefined": "Predefined",
                "custom": "Custom configuration"
            },
            "helpMarkDown": "Specify if you want to use the default, predefined config or a custom config.",
            "groupName": "scanconfiguration"
        },
        {
            "name": "predefinedconfigfile",
            "type": "pickList",
            "label": "Predefined config file",
            "defaultValue": "UDMSecretChecks.toml",
            "required": true,
            "options": {
                "UDMSecretChecks.toml": "UDMSecretChecks.toml",
                "GitleaksUdmCombo.toml": "GitleaksUdmCombo.toml"
            },
            "helpMarkDown": "Select a predefined config file.",
            "visibleRule": "configtype=predefined",
            "groupName": "scanconfiguration"
        },
        {
            "name": "configfile",
            "type": "string",
            "label": "Config file",
            "defaultValue": "$(Build.SourcesDirectory)/.gitleaks.toml",
            "required": true,
            "helpMarkDown": "Specify a custom config file.",
            "visibleRule": "configtype=custom",
            "groupName": "scanconfiguration"
        },
        {
            "name": "scanmode",
            "type": "pickList",
            "label": "Commits to scan mode",
            "defaultValue": "all",
            "required": false,
            "options": {
                "all": "All commits",
                "prevalidationbuild": "Commits done part of the pull request (pre-validation build)",
                "changes": "Commits done between this build and previous build.",
                "nogit": "No commits (no-git scan)"
            },
            "helpMarkDown": "Specify if you want to use the default, predefined config or a custom config.",
            "groupName": "scanoptions"
        },
        {
            "name": "logoptions",
            "type": "boolean",
            "label": "--log-opts parameters",
            "helpMarkDown": "Provide log-opts arguments to Gitleaks",
            "defaultValue": "false",
            "required": false,
            "groupName": "scanoptions"
        },
        {
            "name": "redact",
            "type": "boolean",
            "label": "Redact",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Check this option if you want to redact secrets from log messages and leaks.",
            "groupName": "scanoptions"
        },
        {
            "name": "taskfail",
            "type": "boolean",
            "label": "Fail the task if secrets are found.",
            "defaultValue": "true",
            "required": false,
            "groupName": "reporting"
        },
        {
            "name": "uploadresults",
            "type": "boolean",
            "label": "Upload results",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Check this option if you want to upload the results as an artifact.",
            "groupName": "reporting"
        },
        {
            "name": "reportformat",
            "type": "pickList",
            "label": "Report format",
            "defaultValue": "sarif",
            "required": false,
            "options": {
                "json": "json",
                "sarif": "sarif",
                "csv": "csv"
            },
            "helpMarkDown": "Select a report format: json, sarif, csv (default: sarif)",
            "groupName": "reporting"
        },
        {
            "name": "loglevel",
            "type": "pickList",
            "label": "Log Level",
            "defaultValue": "info",
            "required": false,
            "options": {
                "debug": "Debug",
                "info": "Info",
                "warn": "Warn",
                "error": "Error",
                "fatal": "Fatal"
            },
            "helpMarkDown": "Select the gitleaks log level (default is info)",
            "groupName": "behaviour"
        },
        {
            "name": "verbose",
            "type": "boolean",
            "label": "Verbose output",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Check this option if you want gitleaks to print verbose output.",
            "groupName": "behaviour"
        },
        {
            "name": "version",
            "type": "string",
            "label": "Gitleaks version",
            "defaultValue": "latest",
            "required": false,
            "helpMarkDown": "Specify the version of Gitleaks to use. Must be minimal major version 8",
            "groupName": "gitleakstool"
        },
        {
            "name": "customtoollocation",
            "type": "string",
            "label": "Gitleaks custom tool location",
            "required": false,
            "helpMarkDown": "Specify the custom directory of Gitleaks, when provided, Gitleaks will not be downloaded.",
            "groupName": "gitleakstool"
        },
        {
            "name": "taskfailonexecutionerror",
            "type": "boolean",
            "label": "Fail the task if a task (this wrapper) error occurs.",
            "defaultValue": "true",
            "required": false,
            "groupName": "gitleakstool"
        }
    ],
    "execution": {
        "Node10": {
            "target": "$(currentDirectory)/index.js"
        }
    },
    "messages": {
        "ThanksToZacharyRice": "Thanks to Zachary Rice (https://github.com/zricethezav) for creating and maintaining gitleaks.",
        "ThanksToJesseHouwing": "Thanks to Jesse Houwing (https://github.com/jessehouwing) for providing a gitleaks config that has most of Microsoft's deprecated credscan rules ported to it.",
        "MinimalAllowdVersion": "The minimal allowed major version of Gitleaks supported by this task is version 8. Specified version is %s",
        "DetectedChanges": "Detected %s Git change(s) for this build. First commit is %s, Last commit is %s",
        "LogOptionsFound": "Log options is set as input, scanmode is ignored",
        "BuildReasonPullRequest": "This build is run as pre-validation. Only commits belonging to this Pull Request are scanned.",
        "PreValidationBuildInvallid": "Scanmode is prevalidation, however, this task is not run as part of a pull request.",
        "ResultError": "Secrets found or error encountered when running Gitleaks. See log and report for details.",
        "ResultSuccess": "Good job! No leaks.",
        "ScanFolder": "Scan Folder is set to %s",
        "ReportPath": "Report path is set to %s",
        "IncorrectConfig": "Incorrect configuration set.",
        "ConfigFile": "Config file parameter is set to %s",
        "CachedTool": "Cached tool is %s",
        "CannotParseVersion": "Cannot parse version %s",
        "DownloadUri": "%s download uri is %s",
        "CannotRetrieveVersion": "Cannot retrieve version from %s",
        "CannotDownloadUri": "Cannot retreive download from url %s",
        "OsArchNotSupported": "OS '%s' and architecture '%s' is not supported by %s.",
        "UploadResults": "Uploading report file to %s",
        "GettingUrl": "Getting %s to find latest version of %s",
        "ReleaseInfo": "Downloaded release info: %s",
        "CommitsFile": "CommitsFile is set to  %s",
        "Commits": "The following commits will be scanned: %s",
        "GetEndpointUrlEmpty": "GetEndpointUrl %s is empty",
        "GetEndpointAuthorizationParameterEmpty": "GetEndpointAuthorizationParameter %s is empty",
        "VariableEmpty": "Variable %s is empty",
        "InputEmpty": "Input %s is empty",
        "AdoConnectionError": "Connection cannot be made to Azure DevOps.",
        "GitLeaksNotFound": "Gitleaks cannot be found at %s",
        "HelpOnSecretsFound": "See https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository for information how to remove secrets.",
        "GitleaksOutput": "Gitleaks console output:",
        "OfflineAgent": "The agent has no internet connection, searching for toolversion to use on the agent.",
        "OfflineAgentToolNotAvailable": "The agent has no internet connection and the specified Gitleaks tool version is not available on the agent.",
        "OnlineAgentHasLatestVersion": "The latest version of the tool is available in the toolcache. Version is %s",
        "OnlineAgentHasNotTheLatestVersion": "The latest version of the tool is not available in the toolcache. Version is %s and needs to be downloaded.",
        "NoToolcacheDownloading": "Version %s is not available in toolcache. Downloading version %s.",
        "AvailableInToolcache": "Version %s of gitleaks is already available in toolcache.",
        "DownloadFromGitHub": "Downloading %s from GitHub.",
        "CachedVersions": "Cached versions of Gitleaks on the agent are: %s"
    }
}